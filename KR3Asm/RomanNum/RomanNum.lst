Microsoft (R) Macro Assembler Version 14.15.26730.0	    05/20/19 19:41:43
RomanNum.asm						     Page 1 - 1


				.386
				public @len@4
				public _countRomNum
				public _isCorStr@8
				.model flat
 00000000			.data

 00000000 49 56 58 4C 43	clue db 'IVXLCDM'
	   44 4D
 00000007 00000001		capacity dd 1, 5, 10, 50, 100, 500, 1000
	   00000005
	   0000000A
	   00000032
	   00000064
	   000001F4
	   000003E8

 00000000			.code

 00000000			@len@4 proc

 00000000  FC			cld
 00000001  8B F9		mov edi, ecx
 00000003  B9 FFFFFFFF		mov ecx, 0FFFFFFFFh
 00000008  B0 00		mov al, 0

 0000000A  F2/ AE		repne scasb
 0000000C  74 00		jz count

 0000000E			count:
 0000000E  F7 D1		not ecx
 00000010  49			dec ecx
 00000011  8B C1		mov eax, ecx

 00000013  C3			ret

 00000014			@len@4 endp

 00000014			_countRomNum proc

 00000014  33 C0		xor eax, eax
 00000016  55			push ebp 
 00000017  8B EC		mov ebp, esp

 00000019  4C			dec esp
 0000001A  89 45 FC		mov [ebp - 4], eax

 0000001D  FD			std
 0000001E  8B 5D 08		mov ebx, [ebp + 8]
 00000021  8B 75 0C		mov esi, [ebp + 12]
 00000024  03 F3		add esi, ebx
 00000026  4E			dec esi
 00000027  B4 49		mov ah, 'I'

				.while ebx > 0
 0000002B  AC				lodsb

 0000002C  FC				cld
 0000002D  8D 3D 00000000 R		lea edi, clue
 00000033  B9 00000007			mov ecx, 7
 00000038  F2/ AE			repne scasb
 0000003A  F7 D9			neg ecx
 0000003C  83 C1 06			add ecx, 6
 0000003F  8D 3D 00000007 R		lea edi, capacity
 00000045  8B 14 8F			mov edx, [edi + ecx*4]

 00000048  86 C4			xchg al, ah

 0000004A  8D 3D 00000000 R		lea edi, clue
 00000050  B9 00000007			mov ecx, 7
 00000055  F2/ AE			repne scasb
 00000057  F7 D9			neg ecx
 00000059  83 C1 06			add ecx, 6
 0000005C  8D 3D 00000007 R		lea edi, capacity

 00000062  3B 14 8F			cmp edx, [edi + ecx*4]
 00000065  7D 02			jge notChange

 00000067  F7 DA			neg edx

 00000069				notChange:

 00000069  01 55 FC			add [ebp - 4], edx

 0000006C  4B				dec ebx
 0000006D  FD				std
				.endw

 00000073  8B 45 FC		mov eax, [ebp - 4]
 00000076  8B E5		mov esp, ebp
 00000078  5D			pop ebp
 00000079  C3			ret

 0000007A			_countRomNum endp

 0000007A			_isCorStr@8 proc

 0000007A  55			push ebp 
 0000007B  8B EC		mov ebp, esp

 0000007D  FC			cld
 0000007E  8B 5D 08		mov ebx, [ebp + 8]
 00000081  8B 75 0C		mov esi, [ebp + 12]

				.while ebx > 0
 00000086  AC				lodsb
 00000087  B9 00000007			mov ecx, 7
 0000008C  8D 3D 00000000 R		lea edi, clue

 00000092  F2/ AE			repne scasb
 00000094  74 08			je catch

 00000096  33 C0			xor eax, eax
 00000098  8B E5			mov esp, ebp
 0000009A  5D				pop ebp 
 0000009B  C2 0008			ret 8

 0000009E				catch:

 0000009E  4B				dec ebx
				.endw

 000000A4  B8 00000001		mov eax, 1 
 000000A9  8B E5		mov esp, ebp
 000000AB  5D			pop ebp
 000000AC  C2 0008		ret 8

 000000AF			_isCorStr@8 endp

				end
Microsoft (R) Macro Assembler Version 14.15.26730.0	    05/20/19 19:41:43
RomanNum.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000023 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000AF DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

@len@4 . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000014 Public
  count  . . . . . . . . . . . .	L Near	 0000000E _TEXT	
_countRomNum . . . . . . . . . .	P Near	 00000014 _TEXT	Length= 00000066 Public
  notChange  . . . . . . . . . .	L Near	 00000069 _TEXT	
_isCorStr@8  . . . . . . . . . .	P Near	 0000007A _TEXT	Length= 00000035 Public
  catch  . . . . . . . . . . . .	L Near	 0000009E _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
capacity . . . . . . . . . . . .	DWord	 00000007 _DATA	
clue . . . . . . . . . . . . . .	Byte	 00000000 _DATA	

	   0 Warnings
	   0 Errors
